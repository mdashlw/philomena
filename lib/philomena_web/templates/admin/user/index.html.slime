h1 Users

= form_for :user, ~p"/admin/users", [method: "get", class: "hform"], fn f ->
  .field
    => text_input f, :uq, name: :uq, value: @conn.params["uq"], class: "hform__text input", placeholder: "Search query"
    = submit "Search", class: "button hform__button"
  .field
    elixir:
      sort_fields = [
        "Sort by user ID": :id,
        "Sort by uploads": :uploads_count,
        "Sort by favorites": :images_favourited_count,
        "Sort by comments": :comments_posted_count,
        "Sort by votes": :votes_cast_count,
        "Sort by metadata updates": :metadata_updates_count,
        "Sort by forum posts": :forum_posts_count,
        "Sort by topics": :topic_count,
      ]

      sort_directions = [
        "Descending": :desc,
        "Ascending": :asc
      ]

    = select f, :usf, sort_fields, class: "input", name: "usf", autocomplete: "off", selected: @conn.params["usf"]
    = select f, :usd, sort_directions, class: "input input--separate-left", name: "usd", autocomplete: "off", selected: @conn.params["usd"]

=> link "Site staff", to: ~p"/admin/users?#{[uq: "NOT role:user"]}"
' &bull;
=> link "2FA users", to: ~p"/admin/users?#{[uq: "otp_required_for_login:true"]}"

h2 Search Results

= cond do
  - Enum.any?(@users) ->
    - route = fn p -> ~p"/admin/users?#{p}" end
    - pagination = render PhilomenaWeb.PaginationView, "_pagination.html", page: @users, route: route, conn: @conn, params: scope(@conn)

    = render PhilomenaWeb.Admin.UserView, "_list.html", users: @users, conn: @conn, pagination: pagination
  
  - assigns[:error] ->
    .block.block--fixed.block--danger
      ' Oops, there was an error parsing your query! Check for mistakes like mismatched parentheses. The error was:
    pre = assigns[:error]

  - true ->
    p
      ' No users found!
